export default async function handler(req, res) {
  if (req.method !== "POST") return res.status(405).end();

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–æ–∫–µ–Ω–∞
  const secretOk =
    !process.env.SECRET_TOKEN ||
    req.query.token === process.env.SECRET_TOKEN;
  if (!secretOk)
    return res.status(401).json({ ok: false, error: "bad token" });

  try {
    const body = req.body || {};
    console.log("AMO RAW:", body);

    const statuses = body["leads[status]"];
    if (!statuses || !statuses.length) {
      return res.status(200).json({ ok: true, note: "no statuses" });
    }

    for (const s of statuses) {
      const leadId = s.id;
      const pipelineId = s.pipeline_id;
      const statusId = s.status_id;

      // –î–µ–ª–∞–µ–º –∑–∞–ø—Ä–æ—Å –∫ API amoCRM –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–ª–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å–¥–µ–ª–∫–µ
      const amoRes = await fetch(
        `https://${process.env.AMO_SUBDOMAIN}.amocrm.ru/api/v4/leads/${leadId}?with=contacts`,
        {
          headers: {
            Authorization: `Bearer ${process.env.AMO_REFRESH_TOKEN}`,
          },
        }
      );
      const lead = await amoRes.json();

      // –í—ã—Ç–∞—Å–∫–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ
      const leadName = lead.name || "–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è";
      const link = `https://${process.env.AMO_SUBDOMAIN}.amocrm.ru/leads/detail/${leadId}`;

      // –û—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã–π –º–µ–Ω–µ–¥–∂–µ—Ä
      const manager =
        lead._embedded?.responsible_user?.name ||
        lead.responsible_user_id ||
        "–ù–µ —É–∫–∞–∑–∞–Ω";

      // –ö–∞—Å—Ç–æ–º–Ω—ã–µ –ø–æ–ª—è
      const fields = lead.custom_fields_values || [];
      const typeDoor =
        fields.find((f) => f.field_id == 2094731)?.values?.[0]?.value ||
        "‚Äî";
      const city =
        fields.find((f) => f.field_id == 2094733)?.values?.[0]?.value ||
        "‚Äî";

      // –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
      const text = `üö® *–£–ø–∞–ª–∞ –Ω–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –Ω–∞ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–æ*  
–ü—Ä–æ—Å—å–±–∞ —Å—Ä–æ—á–Ω–æ –ø—Ä–∏–Ω—è—Ç—å –≤ —Ä–∞–±–æ—Ç—É.  

*–°–¥–µ–ª–∫–∞:* [${leadName}](${link})  
*–ú–µ–Ω–µ–¥–∂–µ—Ä:* ${manager}  
*–¢–∏–ø –¥–≤–µ—Ä–∏:* ${typeDoor}  
*–ì–æ—Ä–æ–¥ –¥–æ—Å—Ç–∞–≤–∫–∏:* ${city}`;

      // –û—Ç–ø—Ä–∞–≤–∫–∞ –≤ Telegram
      const tgUrl = `https://api.telegram.org/bot${process.env.TG_BOT_TOKEN}/sendMessage`;
      await fetch(tgUrl, {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({
          chat_id: process.env.TG_CHAT_ID,
          text,
          parse_mode: "Markdown",
          disable_web_page_preview: true,
        }),
      });
    }

    return res.status(200).json({ ok: true });
  } catch (e) {
    console.error("hook error", e);
    return res.status(200).json({ ok: false, error: e.message });
  }
}
